#=
here we create a folder of analysis plots of interence results
=#
include("helpers.jl");
using CSV

# simulation to analyze
simulation = "total_death_simplifiedii_bilateral_N=444_threads=1_var1";
vulnerability = "data/total_path_vulnerability_bidirectional_hemiaverage_1.3.6.9.MPI.csv"

# read vulnerabilityh
vulnerability = CSV.File(vulnerability) |> Tables.matrix

# plot 
inference_obj = deserialize("simulations/"*simulation*".jls")
chain = inference_obj["chain"]
priors = inference_obj["priors"]
labels = inference_obj["labels"]

# find indices of beta and decay parameters in chainparameter_names = collect(keys(priors))
parameter_names = collect(keys(priors))
beta_idxs = findall(key -> occursin("β[",key), parameter_names)
deca_idxs = findall(key -> occursin("d[",key), parameter_names)

# sample from the posterior
S = 1000;
posterior_samples = sample(chain, S; replace=false);

# posterior samples
betas = Array(posterior_samples[:,beta_idxs,1])
decas = Array(posterior_samples[:,deca_idxs,1])

betas_avg = mean.([betas[:,k] for k in 1:size(betas)[2]])
decas_avg = mean.([decas[:,k] for k in 1:size(decas)[2]])

beta_filtered = []
deca_filtered = []
vuln_filtered = []
for i in 1:size(vulnerability)[1]
    # get region and vulnerability metric 
    region = vulnerability[i,1]
    vulner = vulnerability[i,2]

    # find region's index in the nonlinear model
    idx = findfirst(x -> x == "i" * region, labels)
    if !isnothing(idx) && vulner != "NA"
        beta = betas_avg[idx]
        deca = decas_avg[idx]

        # append
        push!(beta_filtered,beta)
        push!(deca_filtered,deca)
        push!(vuln_filtered, parse(Float64,vulner))
    end

end

beta_filtered
vuln_filtered
best_fit = false
correlation_analysis(beta_filtered,vuln_filtered;save_path="figures/vulnerability_correlation/beta_vulnerability_corr.png", xlabel="β", ylabel="vulnerability", title="", plot_fit_line=best_fit)
correlation_analysis(deca_filtered,vuln_filtered;save_path="figures/vulnerability_correlation/deca_vulnerability_corr.png", xlabel="decay", ylabel="vulnerability", title="", plot_fit_line=best_fit)
